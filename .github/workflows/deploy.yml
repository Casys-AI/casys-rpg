name: Deploy MkDocs to GitHub Pages

on:
  push:
    branches: ['main']
    paths:
      - 'docs/**'
      - 'mkdocs.yml'
      - '.github/workflows/**'
      - 'pyproject.toml'
      - 'poetry.lock'
      - 'docs/assets/stylesheets/**'
      - 'docs/assets/images/**'
      - 'docs/assets/javascripts/**'
      - 'docs/overrides/**'
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  deploy:
    environment:
      name: github-pages
      url: https://www.casys.ai
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.13'
          cache: 'pip'
          
      - name: Load cached Poetry installation
        uses: actions/cache@v3
        with:
          path: ~/.local
          key: poetry-${{ runner.os }}
          id: cached-poetry
          
      - name: Install Poetry
        if: steps.cached-poetry.outputs.cache-hit != 'true'
        run: |
          curl -sSL https://install.python-poetry.org | python3 -
          echo "$HOME/.local/bin" >> $GITHUB_PATH
          
      - name: Load cached dependencies
        uses: actions/cache@v3
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ hashFiles('**/poetry.lock') }}
          id: cached-venv
          
      - name: Install dependencies
        if: steps.cached-venv.outputs.cache-hit != 'true'
        run: |
          poetry config virtualenvs.in-project true
          poetry install --no-interaction --no-ansi
          
      - name: Verify critical dependencies
        run: |
          poetry run python -c "import numpy; print(f'Numpy version: {numpy.__version__}')"
          poetry run python -c "import langchain; print(f'Langchain version: {langchain.__version__}')"
          poetry run python -c "import sass; print(f'Libsass version: {sass.__version__}')"

      - name: Build SASS
        run: |
          mkdir -p docs/assets/stylesheets/dist
          cd docs/assets/stylesheets
          poetry run python -c "
import sass
import os
import sys

try:
    print('Starting SASS compilation...')
    print('Current directory:', os.getcwd())
    print('Files in current directory:', os.listdir('.'))
    
    css = sass.compile(
        filename='main.scss',
        include_paths=['.'],
        output_style='compressed'
    )
    
    os.makedirs('dist', exist_ok=True)
    css_file = 'dist/main.css'
    
    with open(css_file, 'w') as f:
        f.write(css)
    
    if os.path.exists(css_file):
        print(f'Successfully created {css_file}')
        print(f'File size: {os.path.getsize(css_file)} bytes')
    else:
        print(f'Error: {css_file} was not created')
        sys.exit(1)
        
    print('SASS compilation successful')
    
except sass.CompileError as e:
    print('SASS compilation error:', str(e))
    sys.exit(1)
except Exception as e:
    print('Unexpected error:', str(e))
    sys.exit(1)
"
          cd ../../..
          
      - name: Build site
        run: poetry run mkdocs build
        
      - name: Copy CNAME
        run: |
          if [ -f docs/static/CNAME ]; then
            cp docs/static/CNAME site/
          else
            echo "Warning: CNAME file not found"
          fi
        
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: site

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4